{
  "name": "polygoat",
  "version": "1.1.4",
  "description": "Make JavaScript functions that support both promise and callback styles.",
  "homepage": "https://github.com/sonnyp/polygoat",
  "bugs": {
    "url": "https://github.com/sonnyp/polygoat/issues"
  },
  "license": "ISC",
  "author": {
    "name": "Sonny Piers",
    "email": "sonny@fastmail.net"
  },
  "keywords": [
    "async",
    "promise",
    "callback",
    "hybrid",
    "hybridify",
    "promisify",
    "thenify"
  ],
  "scripts": {
    "benchmark": "node benchmark/benchmark.js",
    "preversion": "npm test",
    "lint": "standard",
    "unit": "node test.js",
    "test": "npm run unit && npm run lint"
  },
  "repository": {
    "type": "git",
    "url": "github:sonnyp/polygoat"
  },
  "devDependencies": {
    "benchmark": "^2.1.0",
    "bluebird": "^3.3.4",
    "lodash": "^4.11.1",
    "platform": "^1.3.1"
  },
  "readme": "polygoat\n========\n\n[![Build Status](https://img.shields.io/travis/sonnyp/polygoat/master.svg?style=flat-square)](https://travis-ci.org/sonnyp/polygoat/branches)\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat-square)](http://standardjs.com/)\n\n![logo](./logo.png)\n\npolygoat is a tool to make functions support both callback and promise style.\n\n* very small, < 30 lines of code\n* no promise support/polyfill required\n* simple, hack-free\n* Node.js and browsers\n* fast, see [benchmark](#benchmark)\n\n# Getting started\n\n\n`npm install polygoat`\n\n----\n\n```javascript\nvar pg = require('polygoat');\n```\n\nor\n\n```xml\n<script src=\"node_modules/polygoat/index.js\"></script>\n```\n```javascript\nvar pg = window.polygoat\n```\n\n# Usage\n\n```js\n// wrap an asynchronous function with polygoat\nfunction hybridFunction (path, callback) {\n  return pg(function (done) {\n    fs.readdir(path, done)\n  }, callback)\n}\n\n// hybridFunction can be used with promise style\nhybridFunction('/').then(console.log)\n\n// or callback style\nhybridFunction('/', console.log)\n\n// you can also pass the Promise implementation of your choice\nvar bluebird = require('bluebird')\n\nfunction hybridFunction (path, callback) {\n  return pg(function (done) {\n    fs.readdir(path, done)\n  }, callback, bluebird)\n}\n\nhybridFunction() instanceof bluebird // true\n```\n\n# Example\n\nSee [example.js](https://github.com/sonnyp/polygoat/blob/master/example.js)\n\n# Benchmark\n\nSee [benchmark](https://github.com/sonnyp/polygoat/tree/master/benchmark)\n\n# Test\n\n```\nnpm install standard\nnpm test\n```\n\n[Goat icon](https://thenounproject.com/term/goat/301185/) by [Agne Alesiute](https://thenounproject.com/grrrauf) from [the Noun Project](https://thenounproject.com)\n",
  "readmeFilename": "README.md",
  "_id": "polygoat@1.1.4",
  "dist": {
    "shasum": "329f9a0d1b2d4a45149e2539523c6f7dfd850a5f"
  },
  "_from": "polygoat@1.1.4",
  "_resolved": "https://registry.npmjs.org/polygoat/-/polygoat-1.1.4.tgz"
}
